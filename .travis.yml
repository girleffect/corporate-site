sudo: false
addons:
  postgresql: "9.6"
services:
  - postgresql
language: python
python: '3.6'

env:
  global:
    - REGISTRY_USER=geautomation
    - secure: "O/+1cYilUcDNcw8CcQAKYPrqgahQHXFED4RpW1ONCZx+F056yNKt/33/sAnj9mB2BpxQ8VjZtSzSfKGrHhHTZlIEzPPKFS/HXRnraqyeENzXvtojBO8Q5B3BEfLycrZewwJE6pcmcknCZ8bSq0EKGko7XesD5xFVGGCepK1U1le28sNp7o/MTKsgKalImcApcyrZl66eki8+HrN3A3+jd/+8ie4dGECLy4Hgqt4I0wAefZ58HHKJD7fV/zEDVruW0wTeJ5KzVslcg0rDnBVotg2mJ0rLS+XXb3R58g510e9kJW78LNQuU/ofr6kR5jBc+BVAgCMNZm/ICJYkJGwm/CHrTcAUDyH0dYISyfygft/CKGO6lBkJAmTRX8thxODaILqQKzlNJ7ctaZgbjx+uDpC1uVdl0IkdFXiXq7hY7nlajFmY+x84FTvUM8XFHHMBjTzkPdfWrVwYRXG0HblRvF4gKID8/Wd8qZEsZLq+T/HzVA6/k6xMY/5gdsxPX65mCNt7moOMukYBgy2czI/KcXrXI2jyCJsrAAJfLL1UF1qEXD6A6kI1FRZItM9OBklnqtb3tKM4+wdG6SWDLtkLbpKzX2gJw3cJcEXyyTSvzeflEtJZjWC+lImspXWEAsXA7cW4ciZGBSVloznKIyHmNfi5/p5uQQVxKdJjwg9KcQM="
    - DJANGO_SETTINGS_MODULE="girleffect.settings.production"
    - CFG_SECRET_KEY="fake_secret_key_to_run_tests"
    - DATABASE_URL="postgres://postgres@localhost/postgres"
    - REPO="girleffect/girleffect.org"

jobs:
  include:
    - stage: test
      install:
        - "pip install -r requirements.txt --use-wheel"
      script:
        # We need to run the collectstatic command, because we use ManifestStaticFilesStorage.
        # Otherwise the check command will fail
        - python manage.py collectstatic --verbosity 0 --noinput --clear

        # Run system checks
        - python manage.py check

        # Check for missing migrations
        - python manage.py makemigrations --check --noinput

        # Run tests
        - python manage.py test

    - stage: build
      if: branch IN (master, staging)
      sudo: required
      services:
        - docker
      before_script:
        - COMMIT_TAG=${TRAVIS_COMMIT::7}
        - TAG=${TRAVIS_BRANCH}_$COMMIT_TAG
        - image="girleffect/corporate-site"
        # Fetch existing image to use as cache
        - docker pull "$image" || true
      script:
        - docker build --pull --cache-from "$image" --tag "$image" .
      after_script:
        - docker images
      before_deploy:
        - pip install docker-ci-deploy==0.3.0
        - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
      deploy:
        - provider: script
          script: dcd --tag $TAG -- "$image"
          on:
            branch: staging
        - provider: script
          script: dcd --tag $TAG --tag latest -- "$image"
          on:
            branch: master
