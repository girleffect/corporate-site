# vim:set sw=2 ts=2 et:
# This is a sample .gitlab-ci.yml created by wagtail-kit.  You should review
# it for any necessary changes.
#
# This will set up the following:
#
# - Test stage: code style, migration and basic configuration checks.
# - Build stage: build of static assets and Docker image on push.
# - Deploy stage:
#   - Automatic setup of a Kubernetes-hosted staging site from the "staging"
#     branch, if it exists.
#   - Automatic setup and cleanup of review apps for branches and merge requests.

stages:
  - test
  - build
  - deploy


image: docker:latest
variables:
  GE_REGISTRY: girleffect/corporate-site
  PRODUCTION_IMAGE_TAG: $GE_REGISTRY:master_$CI_BUILD_REF
  STAGING_IMAGE_TAG: $GE_REGISTRY:staging_$CI_BUILD_REF
  CI_IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_BUILD_REF
  CFG_EMAIL_SUBJECT_PREFIX: "[girleffect]"
  CFG_ALLOWED_HOSTS: "*"
  DEPLOY_FLAGS: >
    -eDJANGO_SETTINGS_MODULE=girleffect.settings.production
    -eCFG_APP_NAME=girleffect
    -eCFG_MEDIA_DIR=/data/media
    -eCFG_ALLOWED_HOSTS
    -eCFG_EMAIL_HOST=mailer.itl.svc.torchbox.net
    -eCFG_SERVER_EMAIL=aeon@torchbox.com
    -eCFG_EMAIL_SUBJECT_PREFIX
    --memory-request=512m
    --memory-limit=1536m
    --strategy=recreate
    --htauth-user=girleffect:girleffectshowme
    --htauth-address=78.32.251.192/28
    --htauth-address=193.227.244.0/23
    --htauth-address=2001:41c8:103::/48
    --htauth-address=89.197.53.244/30
    --htauth-address=172.28.0.0/14
    --htauth-address=::1/32
    --htauth-address=127.0.0.0/8


# Check python code style.
flake8:
  image: python:3.6
  stage: test
  tags:
    - kubernetes-128
  script:
    - XDG_CACHE_HOME=./tmp/pip-cache pip install flake8
    - flake8 girleffect --ignore=E501,C901 --exclude=*/migrations/*,girleffect/settings/*
    - flake8 girleffect/settings --ignore=E501,F405


# Check settings, migrations and run tests.
test:
  image: python:3.6
  stage: test
  tags:
    - kubernetes-512
  services:
    - postgres:9.6
  variables:
    DJANGO_SETTINGS_MODULE: girleffect.settings.production
    CFG_SECRET_KEY: fake_secret_key_to_run_tests
    DATABASE_URL: postgres://postgres@localhost/postgres
  script:
    # Install requirements
    - pip install wheel
    - pip install -r requirements.txt

    # We need to run the collectstatic command, because we use ManifestStaticFilesStorage.
    # Otherwise the check command will fail
    - python manage.py collectstatic --verbosity 0 --noinput --clear

    # Run system checks
    - python manage.py check

    # Check for missing migrations
    - python manage.py makemigrations --check --noinput

    # Run tests
    - python manage.py test

# Build the Docker image.  Requires 'tags: docker' so it runs on a
# Docker-capable CI runner.
build:
  stage: build
  tags:
    - docker
  only:
    - master
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_IMAGE_TAG .
    - docker push $CI_IMAGE_TAG

# Build the Docker image for production, push to the GE docker repo.
docker_push_production:
  stage: build
  only:
    - master
  tags: 
    - docker
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker build -t $PRODUCTION_IMAGE_TAG .
    - docker push $PRODUCTION_IMAGE_TAG

docker_push_staging:
  stage: build
  only:
    - staging
  tags: 
    - docker
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker build -t $STAGING_IMAGE_TAG .
    - docker push $STAGING_IMAGE_TAG

# Deploy the staging site.
deploy:
  stage: deploy
  tags:
    - kubernetes-128
  only:
    - staging
  environment:
    name: staging
    url: http://$CI_PROJECT_PATH_SLUG.staging.t6x.uk/
  variables:
    GIT_STRATEGY: none
  image: torchbox/kdtool:latest
  script:
    - kdtool deploy -A -Dpostgresql -vdata:/data $DEPLOY_FLAGS -sSECRET_KEY="${SECRET_KEY}" --hostname=$CI_ENVIRONMENT_URL $STAGING_IMAGE_TAG $CI_ENVIRONMENT_SLUG
    